plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven { url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/') }
    maven { url = uri('https://repo.codemc.io/repository/maven-public/') }
    maven { url = uri('https://jitpack.io') }
    maven { url = uri('https://repo.maven.apache.org/maven2/') }
    maven { url = uri('https://repo.fancyplugins.de/releases') }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.21.1-R0.1-SNAPSHOT'
    compileOnly 'com.gmail.filoghost.holographicdisplays:holographicdisplays-api:2.4.9'
    compileOnly 'me.filoghost.holographicdisplays:holographicdisplays-api:3.0.0'
    compileOnly 'com.github.decentsoftware-eu:decentholograms:2.8.6'
    compileOnly 'net.kyori:adventure-text-minimessage:4.16.0'
    compileOnly 'net.kyori:adventure-text-serializer-legacy:4.16.0'

    compileOnly 'de.oliver:FancyHolograms:2.3.3'

    compileOnly fileTree(dir: 'libs', include: '*.jar')
}

group = 'gg.optimalgames'
version = '1.1.4'
description = 'HologramBridge'

java{
    toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = group
            artifactId = project.name
            version = project.version
        }
    }
    repositories {
        maven {
            url 'https://jitpack.io'
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
